# Cursor AI Rules for Work Support Project
# These rules ensure safe and controlled modifications to critical configuration files

## üîí PROPERTIES FILES PROTECTION RULE
## =================================

### CRITICAL RULE: Properties File Modification Protection
**SCOPE**: All files with `.properties` extension in the `config/` directory and any subdirectories

**RULE**: 
- **NEVER** modify, edit, create, or delete any `.properties` files without EXPLICIT USER PERMISSION
- **ALWAYS** provide a FULL EXPLANATION of:
  1. What exactly will be changed (show before/after)
  2. Why the change is necessary
  3. What impact the change will have on the system
  4. What risks might be involved
- **WAIT** for explicit user approval before proceeding with any changes
- **ASK FIRST** even for seemingly minor changes like formatting or comments

### Protected Files Include:
- `config/team_members.properties` - Team member configuration
- `config/jira_api_whitelist.properties` - Security whitelist for API endpoints
- Any other `.properties` files in the config directory

### Examples of Changes That Require Permission:
- Adding new team members
- Modifying whitelist endpoints
- Changing API permissions
- Adding/removing HTTP methods from whitelist
- Updating property values
- Reformatting or reorganizing properties
- Adding new configuration sections

### Required Information Before Changes:
1. **Current State**: Show existing configuration
2. **Proposed Changes**: Exact modifications to be made
3. **Justification**: Business reason for the change
4. **Impact Analysis**: How this affects application behavior
5. **Security Implications**: Any security considerations
6. **Rollback Plan**: How to undo the change if needed

### Example Request Format:
```
üîí PROPERTIES FILE CHANGE REQUEST

File: config/jira_api_whitelist.properties
Action: Add new endpoint

CURRENT STATE:
[show current relevant section]

PROPOSED CHANGES:
[show exact changes to be made]

JUSTIFICATION:
[explain why this change is needed]

IMPACT ANALYSIS:
[explain how this affects the application]

SECURITY IMPLICATIONS:
[any security considerations]

ROLLBACK PLAN:
[how to undo if needed]

‚ùì Do you approve this change? (YES/NO)
```

## üõ°Ô∏è ADDITIONAL SAFETY RULES

### Configuration File Safety
- Always backup configuration files before changes
- Validate syntax after any properties file modifications
- Test configuration loading after changes
- Document all changes in commit messages

### Security-Sensitive Files
- Treat all files in `config/` directory as security-sensitive
- Never expose API tokens or credentials in examples
- Always validate whitelist changes against security requirements

### Code Quality Rules
- Maintain consistent formatting in properties files
- Use descriptive comments for complex configurations
- Group related properties together
- Follow existing naming conventions

## üìù GENERAL DEVELOPMENT GUIDELINES

### When Working with Configuration:
1. Always understand the current configuration before proposing changes
2. Consider the principle of least privilege for API access
3. Test configuration changes in a safe environment when possible
4. Document the purpose and effect of each configuration property

### Emergency Override:
Only in case of critical security vulnerabilities or system outages may these rules be bypassed, and only with immediate notification to the user explaining the emergency action taken.

---
**Remember**: These rules exist to protect critical system configuration and maintain security. When in doubt, always ask for permission first. 